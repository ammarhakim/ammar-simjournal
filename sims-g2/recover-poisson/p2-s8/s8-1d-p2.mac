file_search_maxima: append(file_search_maxima,
  [
  "/Users/ahakim/research/ammar-simjournal/sims-g2/recover-poisson/code/###.{lisp,mac}"
  ])$


load("dg-poisson-fd")$

polyOrder : 2$
nmax : 3$
/* Left/right domain boundary */
xL : -nmax$
xR : nmax$
dx : (xR-xL)/nmax$
bc : basisC[polyOrder]$

pmax : 4$

/* Exact solution ... */
define(exactSol(z), (z-xL)*(z-xR)*sum(a[k+2]*z^k/factorial(k+2), k, 0, pmax))$
/* .. source term corresponding to it */
define(srcFunc(z), -diff(exactSol(z),z,2))$

/* Solve Poisson equation */
solList : solvePoissonEquation(
  grid(lower=xL, upper=xR, cells=nmax),
  polyOrder, srcFunc,
  BC(type=1, value=0), BC(type=1, value=0)
  )$

/* Compute exact projection */
exactProj : projectOnBasisGrid(exactSol, bc, xL, xR, nmax)$

/* Error */
errProj : expand(fullratsimp(solList-exactProj))$

/* Express a[k] in term of derivatives */
diffList : subst(z=0,makelist(diff(exactSol(z),z,i)-d[i],i,2,pmax+2))$
aL : makelist(a[k],k,2,pmax+2)$
akSol : linsolve(diffList, aL)$

/* Express errors in terms of derivatives at z=0 */
errProj_d : subst(akSol, errProj)$

