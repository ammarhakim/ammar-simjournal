<%!
  import glob
  def makeRst(lua, lang):
    extension = "lua"

    if lang == "lua":
      extension = "lua"
    elif lang == "python":
      extension = "py"

    fls = glob.glob("%s/%s-*.%s" % (lua, lua, extension))
    if (len(fls)>0):
      return fls[0][:fls[0].find(".")]
    return ""
%>
<%def name="mdl(sim, lang='lua')"><% luaFl = makeRst(sim, lang) %>:doc:`${sim} <${luaFl}>` </%def>

Simulation Index
================

Following is a list of simulation numbers with one-line
descriptions. Click on the simulation number to see the complete Lua
program for that simulation.

.. list-table::
  :header-rows: 1
  :widths: 10,90

  * - Number
    - Description
  * - ${mdl("euler-kh/s1")}
    - Kelvin-Helmhotlz instability (ATHENA test) for Euler equations. Random perturbation.
  * - ${mdl("euler-kh/s2")}
    - Same as euler-kh/s1, except on a 400x400 grid
  * - ${mdl("euler-kh/s3")}
    - Same as euler-kh/s1, except on a 600x600 grid
  * - ${mdl("euler-kh/s4")}
    - Same as euler-kh/s1, except on a 1000x1000 grid
  * - ${mdl("euler-kh/s5")}
    - Same as euler-kh/s1, except on a 1000x1000 grid, single mode perturbation
  * - ${mdl("euler-kh/s6")}
    - Same as euler-kh/s5, except on a 600x600 grid, single mode perturbation
  * - ${mdl("euler-kh/s7")}
    - Same as euler-kh/s5, except on a 2000x2000 grid, single mode perturbation
