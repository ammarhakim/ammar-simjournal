<%!
  import glob
  def makeRst(lua, lang):
    extension = "lua"

    if lang == "lua":
      extension = "lua"
    elif lang == "python":
      extension = "py"

    fls = glob.glob("%s/%s-*.%s" % (lua, lua, extension))
    if (len(fls)>0):
      return fls[0][:fls[0].find(".")]
    return ""
%>
<%def name="mdl(sim, lang='lua')"><% luaFl = makeRst(sim, lang) %>:doc:`${sim} <${luaFl}>` </%def>

Simulation Index
================

Following is a list of simulation numbers with one-line
descriptions. Click on the simulation number to see the complete Lua
program for that simulation.

.. list-table::
  :header-rows: 1
  :widths: 10,90

  * - Number
    - Description
  * - ${mdl("s0")}
    - FV solver, used for comparison and benchmarking
  * - ${mdl("s1")}
    - DG Maxwell solver, polyOrder=1, Lax fluxes, 40x2 grid
  * - ${mdl("s2")}
    - Same as s1, except, 80x4 grid
  * - ${mdl("s3")}
    - Same as s1, except, 160x8 grid
  * - ${mdl("s4")}
    - DG Maxwell solver, polyOrder=2, Lax fluxes, 10x2 grid
  * - ${mdl("s5")}
    - Same as s4, except, 20x4 grid
  * - ${mdl("s6")}
    - Same as s4, except, 40x8 grid
  * - ${mdl("s7")}
    - DG Maxwell solver, polyOrder=3, Lagrange tensor elements, Lax fluxes, 2x1 grid
  * - ${mdl("s8")}
    - Same as s7, except 4x2 grid
  * - ${mdl("s9")}
    - Same as s7, except 8x4 grid
  * - ${mdl("s10")}
    - Same as s7, except 16x8 grid
  * - ${mdl("s11")}
    - EM pulse in a box, polyOrder=1.
  * - ${mdl("s12")}
    - EM pulse in a box, polyOrder=2.
  * - ${mdl("s13")}
    - EM pulse in a box, polyOrder=3, Lagrange tensor elements.


