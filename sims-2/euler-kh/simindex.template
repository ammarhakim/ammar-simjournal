<%!
  import glob
  def makeRst(lua, lang):
    extension = "lua"

    if lang == "lua":
      extension = "lua"
    elif lang == "python":
      extension = "py"

    fls = glob.glob("%s/%s-*.%s" % (lua, lua, extension))
    if (len(fls)>0):
      return fls[0][:fls[0].find(".")]
    return ""
%>
<%def name="mdl(sim, lang='lua')"><% luaFl = makeRst(sim, lang) %>:doc:`${sim} <${luaFl}>` </%def>

Simulation Index
================

Euler KH simulations

.. list-table::
  :header-rows: 1
  :widths: 10,90

  * - Number
    - Description
  * - ${mdl("s1")}
    - Kelvin-Helmhotlz instability (ATHENA test) for Euler equations. Random perturbation.
  * - ${mdl("s2")}
    - Same as s1, except on a 400x400 grid
  * - ${mdl("s3")}
    - Same as s1, except on a 600x600 grid
  * - ${mdl("s4")}
    - Same as s1, except on a 1000x1000 grid
  * - ${mdl("s5")}
    - Same as s1, except on a 1000x1000 grid, single mode perturbation
  * - ${mdl("s6")}
    - Same as s5, except on a 600x600 grid, single mode perturbation
  * - ${mdl("s7")}
    - Same as s5, except on a 2000x2000 grid, single mode perturbation
  * - ${mdl("s8")}
    - Same as s7, except on a 1000x1000 grid, 10 mode perturbation
  * - ${mdl("s9")}
    - Same as s7, except 20 mode perturbation
  * - ${mdl("s10")}
    - KH with smoothed out profiles. Single mode
  * - ${mdl("s11")}
    - Same as s10. 10 modes
  * - ${mdl("s12")}
    - Same as s10. 10 modes, and 2000x2000 grid
  * - ${mdl("s13")}
    - Same as s10. 10 modes, but with length-scale 0.01.
  * - ${mdl("s14")}
    - KH using using polyOrder=1 DG on 500x500 grid. 1 mode, with length-scale 0.01.
